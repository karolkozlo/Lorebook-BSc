-- MySQL Script generated by MySQL Workbench
-- Fri Oct 28 19:05:29 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Lorebook
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Lorebook` ;

-- -----------------------------------------------------
-- Schema Lorebook
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Lorebook` DEFAULT CHARACTER SET utf8 ;
USE `Lorebook` ;

-- -----------------------------------------------------
-- Table `Lorebook`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`users` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(80) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_U` (`email` ASC) VISIBLE,
  UNIQUE INDEX `name_U` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`universes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`universes` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`universes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` TEXT(1000) NULL,
  `User_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Universe_User_idx` (`User_id` ASC) VISIBLE,
  CONSTRAINT `fk_Universe_User`
    FOREIGN KEY (`User_id`)
    REFERENCES `Lorebook`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`locations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`locations` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`locations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL,
  `description` VARCHAR(250) NULL,
  `last_modified` DATETIME NOT NULL,
  `Location_id` INT NULL,
  `Universe_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Location_Location1_idx` (`Location_id` ASC) VISIBLE,
  INDEX `fk_Location_Universe1_idx` (`Universe_id` ASC) VISIBLE,
  CONSTRAINT `fk_Location_Location1`
    FOREIGN KEY (`Location_id`)
    REFERENCES `Lorebook`.`locations` (`id`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Location_Universe1`
    FOREIGN KEY (`Universe_id`)
    REFERENCES `Lorebook`.`universes` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`maps`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`maps` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`maps` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(60) NOT NULL,
  `image` MEDIUMBLOB NOT NULL,
  `Location_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Map_Location1_idx` (`Location_id` ASC) VISIBLE,
  CONSTRAINT `fk_Map_Location1`
    FOREIGN KEY (`Location_id`)
    REFERENCES `Lorebook`.`locations` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`categories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`categories` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`categories` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `Universe_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Category_Universe1_idx` (`Universe_id` ASC) VISIBLE,
  UNIQUE INDEX `Category_U` (`name` ASC, `Universe_id` ASC) INVISIBLE,
  CONSTRAINT `fk_Category_Universe1`
    FOREIGN KEY (`Universe_id`)
    REFERENCES `Lorebook`.`universes` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`entries`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`entries` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`entries` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL,
  `description` VARCHAR(250) NULL,
  `last_modified` DATETIME NOT NULL,
  `Category_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Entry_Category1_idx` (`Category_id` ASC) VISIBLE,
  CONSTRAINT `fk_Entry_Category1`
    FOREIGN KEY (`Category_id`)
    REFERENCES `Lorebook`.`categories` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`characters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`characters` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`characters` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL,
  `description` VARCHAR(250) NULL,
  `last_modified` DATETIME NOT NULL,
  `Universe_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Character_Universe1_idx` (`Universe_id` ASC) VISIBLE,
  CONSTRAINT `fk_Character_Universe1`
    FOREIGN KEY (`Universe_id`)
    REFERENCES `Lorebook`.`universes` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`relations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`relations` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`relations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `level` INT NOT NULL DEFAULT 0,
  `description` VARCHAR(60) NULL,
  `Character1_id` INT NOT NULL,
  `Character2_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Relation_Character1_idx` (`Character1_id` ASC) VISIBLE,
  INDEX `fk_Relation_Character2_idx` (`Character2_id` ASC) VISIBLE,
  UNIQUE INDEX `Relation_U` (`Character1_id` ASC, `Character2_id` ASC) VISIBLE,
  CONSTRAINT `fk_Relation_Character1`
    FOREIGN KEY (`Character1_id`)
    REFERENCES `Lorebook`.`characters` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Relation_Character2`
    FOREIGN KEY (`Character2_id`)
    REFERENCES `Lorebook`.`characters` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`timelines`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`timelines` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`timelines` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(60) NOT NULL,
  `Universe_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Timeline_Universe1_idx` (`Universe_id` ASC) VISIBLE,
  CONSTRAINT `fk_Timeline_Universe1`
    FOREIGN KEY (`Universe_id`)
    REFERENCES `Lorebook`.`universes` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`events` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`events` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL,
  `year` INT NOT NULL,
  `month` TINYINT NOT NULL,
  `day` TINYINT NOT NULL,
  `description` VARCHAR(250) NULL,
  `last_modified` DATETIME NOT NULL,
  `Universe_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Events_Universes1_idx` (`Universe_id` ASC) VISIBLE,
  CONSTRAINT `fk_Events_Universe`
    FOREIGN KEY (`Universe_id`)
    REFERENCES `Lorebook`.`universes` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`timeline_event`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`timeline_event` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`timeline_event` (
  `Timeline_id` INT NOT NULL,
  `Event_id` INT NOT NULL,
  PRIMARY KEY (`Timeline_id`, `Event_id`),
  INDEX `fk_Event_list_Event1_idx` (`Event_id` ASC) VISIBLE,
  CONSTRAINT `fk_Event_list_Timeline1`
    FOREIGN KEY (`Timeline_id`)
    REFERENCES `Lorebook`.`timelines` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Event_list_Event1`
    FOREIGN KEY (`Event_id`)
    REFERENCES `Lorebook`.`events` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`contents`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`contents` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`contents` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `configuration` JSON NOT NULL,
  `Entry_id` INT NULL,
  `Location_id` INT NULL,
  `Event_id` INT NULL,
  `Character_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Content_Entry1_idx` (`Entry_id` ASC) VISIBLE,
  INDEX `fk_Content_Location1_idx` (`Location_id` ASC) VISIBLE,
  INDEX `fk_Content_Event1_idx` (`Event_id` ASC) VISIBLE,
  INDEX `fk_Content_Character1_idx` (`Character_id` ASC) VISIBLE,
  CONSTRAINT `fk_Content_Entry1`
    FOREIGN KEY (`Entry_id`)
    REFERENCES `Lorebook`.`entries` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Content_Location1`
    FOREIGN KEY (`Location_id`)
    REFERENCES `Lorebook`.`locations` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Content_Event1`
    FOREIGN KEY (`Event_id`)
    REFERENCES `Lorebook`.`events` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Content_Character1`
    FOREIGN KEY (`Character_id`)
    REFERENCES `Lorebook`.`characters` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`texts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`texts` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`texts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(60) NOT NULL,
  `text` TEXT(8000) NULL,
  `Content_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Text_Content1_idx` (`Content_id` ASC) VISIBLE,
  CONSTRAINT `fk_Text_Content1`
    FOREIGN KEY (`Content_id`)
    REFERENCES `Lorebook`.`contents` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`lists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`lists` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`lists` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(60) NOT NULL,
  `Content_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_List_Content1_idx` (`Content_id` ASC) VISIBLE,
  CONSTRAINT `fk_List_Content1`
    FOREIGN KEY (`Content_id`)
    REFERENCES `Lorebook`.`contents` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`list_items`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`list_items` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`list_items` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(60) NOT NULL,
  `text` VARCHAR(1000) NULL,
  `ordinal_number` SMALLINT UNSIGNED NOT NULL,
  `List_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_List_Item_List1_idx` (`List_id` ASC) VISIBLE,
  CONSTRAINT `fk_List_Item_List1`
    FOREIGN KEY (`List_id`)
    REFERENCES `Lorebook`.`lists` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`image_groups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`image_groups` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`image_groups` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(60) NOT NULL,
  `Content_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Image_group_Content1_idx` (`Content_id` ASC) VISIBLE,
  CONSTRAINT `fk_Image_group_Content1`
    FOREIGN KEY (`Content_id`)
    REFERENCES `Lorebook`.`contents` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`images`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`images` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`images` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) NULL,
  `image` MEDIUMBLOB NOT NULL,
  `ordinal_number` SMALLINT UNSIGNED NOT NULL,
  `description` VARCHAR(250) NULL,
  `Image_group_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Image_Image_group1_idx` (`Image_group_id` ASC) VISIBLE,
  CONSTRAINT `fk_Image_Image_group1`
    FOREIGN KEY (`Image_group_id`)
    REFERENCES `Lorebook`.`image_groups` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`tags`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`tags` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`tags` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL,
  `Universe_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC, `Universe_id` ASC) INVISIBLE,
  INDEX `fk_Tags_Universes1_idx` (`Universe_id` ASC) VISIBLE,
  CONSTRAINT `fk_Tags_Universe`
    FOREIGN KEY (`Universe_id`)
    REFERENCES `Lorebook`.`universes` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`tag_content`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`tag_content` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`tag_content` (
  `Content_id` INT NOT NULL,
  `Tag_id` INT NOT NULL,
  PRIMARY KEY (`Content_id`, `Tag_id`),
  INDEX `fk_Tag_list_Tag1_idx` (`Tag_id` ASC) VISIBLE,
  CONSTRAINT `fk_Content_Tag`
    FOREIGN KEY (`Content_id`)
    REFERENCES `Lorebook`.`contents` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Tag_Content`
    FOREIGN KEY (`Tag_id`)
    REFERENCES `Lorebook`.`tags` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`link_groups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`link_groups` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`link_groups` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(60) NOT NULL,
  `Content_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Link_group_Content1_idx` (`Content_id` ASC) VISIBLE,
  CONSTRAINT `fk_Link_group_Content1`
    FOREIGN KEY (`Content_id`)
    REFERENCES `Lorebook`.`contents` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`stories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`stories` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`stories` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(80) NOT NULL DEFAULT 'My New Story',
  `description` VARCHAR(500) NULL,
  `Universe_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Story_Universe1_idx` (`Universe_id` ASC) VISIBLE,
  CONSTRAINT `fk_Story_Universe1`
    FOREIGN KEY (`Universe_id`)
    REFERENCES `Lorebook`.`universes` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`chapters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`chapters` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`chapters` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(80) NOT NULL,
  `ordinal_number` INT UNSIGNED NOT NULL,
  `text` JSON NOT NULL,
  `description` VARCHAR(500) NULL,
  `Story_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Chapter_Story1_idx` (`Story_id` ASC) VISIBLE,
  CONSTRAINT `fk_Chapter_Story1`
    FOREIGN KEY (`Story_id`)
    REFERENCES `Lorebook`.`stories` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`links`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`links` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`links` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(250) NULL,
  `Link_group_id` INT NULL,
  `Chapter_id` INT NULL,
  `Character_id` INT NULL,
  `Event_id` INT NULL,
  `Location_id` INT NULL,
  `Entry_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Link_Link_group1_idx` (`Link_group_id` ASC) VISIBLE,
  INDEX `fk_Link_Character1_idx` (`Character_id` ASC) VISIBLE,
  INDEX `fk_Link_Event1_idx` (`Event_id` ASC) VISIBLE,
  INDEX `fk_Link_Location1_idx` (`Location_id` ASC) VISIBLE,
  INDEX `fk_Link_Entry1_idx` (`Entry_id` ASC) VISIBLE,
  INDEX `fk_Links_Chapters1_idx` (`Chapter_id` ASC) VISIBLE,
  CONSTRAINT `fk_Link_Link_group1`
    FOREIGN KEY (`Link_group_id`)
    REFERENCES `Lorebook`.`link_groups` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Link_Character1`
    FOREIGN KEY (`Character_id`)
    REFERENCES `Lorebook`.`characters` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Link_Event1`
    FOREIGN KEY (`Event_id`)
    REFERENCES `Lorebook`.`events` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Link_Location1`
    FOREIGN KEY (`Location_id`)
    REFERENCES `Lorebook`.`locations` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Link_Entry1`
    FOREIGN KEY (`Entry_id`)
    REFERENCES `Lorebook`.`entries` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Links_Chapters1`
    FOREIGN KEY (`Chapter_id`)
    REFERENCES `Lorebook`.`chapters` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lorebook`.`templates`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Lorebook`.`templates` ;

CREATE TABLE IF NOT EXISTS `Lorebook`.`templates` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL DEFAULT 'Template',
  `type` VARCHAR(45) NOT NULL,
  `template` JSON NOT NULL,
  `Universe_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Templates_Universes1_idx` (`Universe_id` ASC) VISIBLE,
  CONSTRAINT `fk_Templates_Universes1`
    FOREIGN KEY (`Universe_id`)
    REFERENCES `Lorebook`.`universes` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `Lorebook`;

DELIMITER $$

USE `Lorebook`$$
DROP TRIGGER IF EXISTS `Lorebook`.`Content_BEFORE_INSERT` $$
USE `Lorebook`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Lorebook`.`Content_BEFORE_INSERT` BEFORE INSERT ON `Contents` FOR EACH ROW
BEGIN
	IF ( NEW.Character_id <=> null AND NEW.Entry_id <=> null AND NEW.Location_id <=> null AND NEW.Event_id <=> null ) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid data';
	end if;
	IF ( NEW.Entry_id != null AND (NEW.Location_id != null OR NEW.Event_id != null OR NEW.Character_id != null) ) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid data';
	end if;
    IF ( NEW.Location_id != null AND (NEW.Entry_id != null OR NEW.Event_id != null OR NEW.Character_id != null) ) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid data';
	end if;
    IF ( NEW.Event_id != null AND (NEW.Entry_id != null OR NEW.Location_id != null OR NEW.Character_id != null) ) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid data';
	end if;
    IF ( NEW.Character_id != null AND (NEW.Entry_id != null OR NEW.Location_id != null OR NEW.Event_id != null) ) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid data';
	end if;
END$$


USE `Lorebook`$$
DROP TRIGGER IF EXISTS `Lorebook`.`Link_BEFORE_INSERT` $$
USE `Lorebook`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Lorebook`.`Link_BEFORE_INSERT` BEFORE INSERT ON `Links` FOR EACH ROW
BEGIN
	IF ( NEW.Link_group_id <=> null AND NEW.Chapter_id <=> null ) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid data - link should be associated with Link_group or Chapter';
	end if;
    IF ( NEW.Link_group_id != null AND NEW.Chapter_id != null ) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid data - Link can be associated ONLY with a Link_group OR ONLY with a Chapter';
	end if;
	IF ( NEW.Character_id <=> null AND NEW.Entry_id <=> null AND NEW.Location_id <=> null AND NEW.Event_id <=> null ) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid data';
	end if;
	IF ( NEW.Entry_id != null AND (NEW.Location_id != null OR NEW.Event_id != null OR NEW.Character_id != null) ) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid data';
	end if;
    IF ( NEW.Location_id != null AND (NEW.Entry_id != null OR NEW.Event_id != null OR NEW.Character_id != null) ) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid data';
	end if;
    IF ( NEW.Event_id != null AND (NEW.Entry_id != null OR NEW.Location_id != null OR NEW.Character_id != null) ) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid data';
	end if;
    IF ( NEW.Character_id != null AND (NEW.Entry_id != null OR NEW.Location_id != null OR NEW.Event_id != null) ) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid data';
	end if;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
